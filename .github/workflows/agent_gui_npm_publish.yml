name: Refact Agent GUI CI Publish (Node.js)

on:
  workflow_dispatch:
    inputs:
      perform_publish:
        required: true
        type: boolean
        default: false
        description: Publish to NPM Registry
  push:
    branches: [main, dev]
    paths:
      - 'refact-agent/gui/**'
      - '.github/workflows/agent_gui_*'

defaults:
  run:
    working-directory: refact-agent/gui

jobs:
  publish:
    runs-on: ubuntu-latest
    # Runs only if pushing to dev or main branches,
    # or workflow_dispatch with inputs.perform_publish
    if: |
      inputs.perform_publish ||
      (
        github.event_name == 'push' &&
        (
          github.ref_name == 'main' ||
          github.ref_name == 'dev'
        )
      )

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: refact-agent/gui/package-lock.json

      - name: Install dependencies
        run: |
          npm pkg delete scripts.prepare
          npm ci

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $VERSION"

          # Determine version bump type based on branch
          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "Bumping alpha version..."
            npm run alpha:version
          else
            echo "Bumping patch version..."
            npm version patch -m "Bump version to %s [skip ci]"
          fi

          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"

      - name: Publish to NPM Registry
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "Attempting to publish version: $VERSION"

          if npm view refact-chat-js@$VERSION version &> /dev/null; then
            echo "Version $VERSION already exists in npm registry!"
            exit 1
          else
            echo "Version $VERSION is available, proceeding with publish..."
            if [[ "${{ github.ref_name }}" == "dev" ]]; then
              npm run alpha:publish
            else
              npm publish
            fi
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup vars
        shell: bash
        id: setupvars
        run: |
          echo "gui_version=$(node -p "require('./package.json').version")" >> "$GITHUB_OUTPUT"
          echo "release_tag=$(node -p "require('./package.json').version.includes('alpha') ? 'alpha' : 'latest'")" >> "$GITHUB_OUTPUT"

      - name: Commit and push version update
        run: |
          VERSION="${{ steps.setupvars.outputs.gui_version }}"
          git add package.json package-lock.json
          git commit -m "Version bump $VERSION"
          git push origin HEAD:${{ github.ref_name }}

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "GUI ${{ steps.setupvars.outputs.gui_version }} is published on npm registry with '${{ steps.setupvars.outputs.release_tag }}' tag",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "by ${{ github.actor }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
